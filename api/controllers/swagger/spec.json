{
  "openapi": "3.0.0",
  "info": {
    "title": "UC Davis - Researcher Profiles API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/{id}": {
      "get": {
        "description": "Get research profile record by id",
        "tags": [
          "Get Record"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "id of record, comma separate for multiple id response",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested record(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "record or array of records"
                }
              }
            }
          }
        }
      }
    },
    "/fuseki": {
      "post": {
        "description": "Query Fuseki linked database",
        "tags": [
          "SPARQL Endpoint"
        ],
        "requestBody": {
          "required": true,
          "description": "Application search query",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sparql result",
            "content": {
              "application/sparql-results+json": {
                "schema": {
                  "type": "object",
                  "description": "JSONLD"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "post": {
        "description": "Application search query",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "debug",
            "description": "include elastic search body in response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Application search query",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ApiSearchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api search result object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ApiSearchResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Raw elastic search query",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "name": "q",
            "description": "Stringified ApiSearchDocument Object",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "debug",
            "description": "include elastic search body in response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api search result object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ApiSearchResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/es": {
      "post": {
        "description": "Application search query",
        "tags": [
          "Search"
        ],
        "requestBody": {
          "required": true,
          "description": "Application search query",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ApiSearchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ElasticSearch search result object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Raw elastic search query",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "name": "q",
            "description": "Stringified elastic search query document body; https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-search-api-request-body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ElasticSearch search result object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiSearchDocument": {
        "description": "Application search query object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "(es from), the first result you want to fetch",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "description": "max results to return",
            "default": 10
          },
          "sort": {
            "type": "array",
            "description": "How to sort results, provide array of elastic search sort object; https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html",
            "items": {
              "type": "object"
            },
            "default": [
              "_score"
            ]
          },
          "filters": {
            "type": "object",
            "$ref": "#/components/schemas/ApiSearchDocument_filters"
          },
          "text": {
            "type": "string",
            "description": "text to use in search",
            "default": ""
          },
          "textFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "text indexes to apply 'text' query parameter to"
          },
          "facets": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiSearchDocument_facetsFacet"
              },
              {
                "$ref": "#/components/schemas/ApiSearchDocument_facetsRange"
              }
            ]
          }
        }
      },
      "ApiSearchDocument_filters": {
        "description": "Query filters where key is the property to filter on and value is filter definition",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiSearchDocument_filtersKeyword"
          },
          {
            "$ref": "#/components/schemas/ApiSearchDocument_filtersRange"
          },
          {
            "$ref": "#/components/schemas/ApiSearchDocument_filtersPrefix"
          },
          {
            "$ref": "#/components/schemas/ApiSearchDocument_filtersExists"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ApiSearchDocument_filtersKeyword": {
        "description": "Keyword filter where an exact match must be met.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "keyword"
            ]
          },
          "op": {
            "description": "logic operation.  Should values be 'or' or 'and' matched",
            "type": "string",
            "enum": [
              "and",
              "or"
            ]
          },
          "value": {
            "description": "values to match property to",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "op",
          "value"
        ]
      },
      "ApiSearchDocument_filtersRange": {
        "description": "Application search query object filters values parameters",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "range"
            ]
          },
          "value": {
            "description": "range value object",
            "type": "object",
            "$ref": "#/components/schemas/ApiSearchDocument_filtersRangeValue"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ApiSearchDocument_filtersRangeValue": {
        "description": "Range filter value query object.  This should be a elastic search range query with one additional property 'includeNull'; https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html",
        "properties": {
          "includeNull": {
            "description": "should null values be returned in results set",
            "type": "boolean",
            "default": false
          }
        },
        "additionalProperties": true
      },
      "ApiSearchDocument_filtersPrefix": {
        "description": "Prefix search on property",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "prefix"
            ]
          },
          "value": {
            "description": "prefix match value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ApiSearchDocument_filtersExists": {
        "description": "Filters results so that parameter(s) must exist",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "exists"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "ApiSearchDocument_facetsFacet": {
        "description": "Return a facet as typical keyword match",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "facet"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "ApiSearchDocument_facetsRange": {
        "description": "Return a facet as min/max range values.  used for range filters",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "range"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "ApiSearchResult": {
        "description": "Application search query result object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "total results for query (excludes limit/offset parameters)"
          },
          "offset": {
            "type": "integer",
            "description": "offset parameter used for this query"
          },
          "limit": {
            "type": "integer",
            "description": "limit parameter used for this query"
          },
          "searchDocument": {
            "type": "object",
            "description": "Query object used",
            "$ref": "#/components/schemas/ApiSearchDocument"
          },
          "results": {
            "type": "array",
            "description": "array of record objects",
            "items": {
              "type": "object"
            }
          },
          "aggregations": {
            "type": "object",
            "$ref": "#/components/schemas/ApiSearchResult_aggregations"
          }
        }
      },
      "ApiSearchResult_aggregations": {
        "description": "returned aggragations from provided facets is query object",
        "properties": {
          "facets": {
            "type": "object"
          },
          "ranges": {
            "type": "object"
          }
        }
      }
    }
  },
  "tags": []
}